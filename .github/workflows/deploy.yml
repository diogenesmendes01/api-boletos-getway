# .github/workflows/deploy.yml
# ATUALIZADO com o nome correto do repositório
name: Deploy API Boletos Olympiabank

on:
  push:
    branches: 
      - main
      - master
      - develop

env:
  REGISTRY: ghcr.io
  # IMPORTANTE: Verifique qual é o nome correto do seu repositório
  # Opção 1: Com S e getway
  IMAGE_NAME: diogenesmendes01/api-boletos-getway
  # Opção 2: Sem S e gatway
  # IMAGE_NAME: diogenesmendes01/api-boleto-gatway
  
  VPS_IP: 168.231.92.229

jobs:
  build-and-push:
    name: Build e Deploy
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy na VPS
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            echo "🚀 Iniciando deploy..."
            
            # Criar diretórios se não existirem
            mkdir -p ~/projetos/api-boleto
            cd ~/projetos/api-boleto
            
            # Verificar qual imagem usar (com S ou sem S)
            if docker pull ghcr.io/diogenesmendes01/api-boletos-getway:latest 2>/dev/null; then
              IMAGE_NAME="ghcr.io/diogenesmendes01/api-boletos-getway:latest"
            elif docker pull ghcr.io/diogenesmendes01/api-boleto-gatway:latest 2>/dev/null; then
              IMAGE_NAME="ghcr.io/diogenesmendes01/api-boleto-gatway:latest"
            else
              echo "❌ Erro: Não foi possível baixar nenhuma imagem"
              exit 1
            fi
            
            echo "📦 Usando imagem: $IMAGE_NAME"
            
            # Criar docker-compose se não existir
            cat > docker-compose.prod.yml << EOF
            version: '3.8'
            services:
              api-boleto:
                image: $IMAGE_NAME
                container_name: api-boleto-olympia
                restart: always
                ports:
                  - "127.0.0.1:3001:3000"
                environment:
                  - NODE_ENV=production
                  - PORT=3000
                  - DATABASE_URL=postgresql://olympia_app:V/aMMGypweFPSlGivTdcaC44zzEZDfuv@postgres-olympia:5432/boleto_db
                  - JWT_SECRET=\${JWT_SECRET:-jwt_change_this}
                  - API_KEY=\${API_KEY:-api_change_this}
                networks:
                  - nginx-proxy-manager_default
                volumes:
                  - ./logs:/app/logs
                  - ./uploads:/app/uploads
            networks:
              nginx-proxy-manager_default:
                external: true
            EOF
            
            # Parar e reiniciar
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d
            
            # Verificar
            sleep 10
            if docker ps | grep -q api-boleto-olympia; then
              echo "✅ Deploy concluído!"
              docker logs --tail 20 api-boleto-olympia
            else
              echo "❌ Container não está rodando"
              docker logs api-boleto-olympia
              exit 1
            fi